{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACA,oCACI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAcbM,GAda,4CAAH,sDCERO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGpC,OACE,yBAAKc,UAAU,0CAEX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAMA,EAAN,OCLKO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECNwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAK,SAAAC,GACFC,YAAY,WACRC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAGP,CAACpB,IAKDqB,EDlByBQ,CAAa7B,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAgBvB,OACI,oCACF,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACAoB,IAAKpB,EAAIC,IACLD,UE/BHqB,EAAe,WAExB,MAAoC7C,mBAAS,CAAC,WAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI8B,IAAK9B,EACLA,SAAWA,U,MClBvCiC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dc54e65f.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e)=>{\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n             //console.log('submit hecho');\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n       \r\n    }\r\n  \r\n    return (\r\n    <>\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue  }\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>              \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifts = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=WNpimpZwSDGTilnYTqXlpoCtxmOLZbNx`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })    \r\n    // console.log(gifs);             \r\n    // setImages(gifs);\r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\n// export const GifGridItem = (props) => {\r\n//     console.log(props);\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log({id,title,url});\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n        \r\n        <img src={url} alt={title} />\r\n        <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import React, {useState,useEffect} from 'react'\r\nimport {GifGridItem} from './GifGridItem'\r\n//import {getGifts} from '../helpers/getGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([])\r\n    const { data:images, loading} = useFetchGifs(category);\r\n    \r\n\r\n    // //const [count, setCount] = useState(0);\r\n    // useEffect( ()=>{\r\n    //     //getGifts();\r\n    //     getGifts(category)\r\n    //         .then(imgs => setImages(imgs))\r\n    //         //.then(setImages) lo mismo\r\n\r\n    // },[category])\r\n\r\n\r\n\r\n \r\n     \r\n  return (\r\n      <>\r\n    <h3 className='animate__animated animate__fadeIn'>{category}</h3>  \r\n    {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n    \r\n    <div className=\"card-grid\">             \r\n        {            \r\n            images.map( img=> (            \r\n            <GifGridItem\r\n            key={img.id}\r\n            {...img}                                                \r\n            />\r\n        ))\r\n        }         \r\n    </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifts} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(category)\r\n            .then(imgs => {                \r\n                setTimeout( ()=>{\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,    \r\n                    });\r\n                },3000)                \r\n            })\r\n                \r\n        }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // {data:[], loading: true}\r\n\r\n}\r\n","import React,{ useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Beagle']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( ['Xhunter', ...categories]);\r\n    //     //setCategories( cats => ['Xhunter', ...categories]); //otramanera        \r\n    // }\r\n    //abajo de hr /* <button onClick={ handleAdd }>Agregar</button> */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n  )\r\n}\r\n\r\n//export default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}